#!/bin/bash
#
# FILENAME:     snap_guest
# AUTHOR:       Bennett Samowich <bennett@foolean.org>
# DATE:         2016-04-21
#
# DESCRIPTION:
#   snap_guest is a simple script to handle the snapshoting of KVM guests
#   in an environment with multiple Hypervisors.
#
###############################################################################

# Find out where in the world we are
VMEBIN=$(readlink -f $(dirname $0))
MYNAME=$(basename $0)

# Load common functions and variables
. "${VMEBIN}/vme-common"

# Basic usage/help function
usage() {
    echo "usage: ${MYNAME} [OPTIONS] guest"
    echo "where:"
    echo "  -d [description]    - Description of the snapshot"
    echo "  -h                  - Print this message"
    echo "  -n [name]           - Name of the snapshot"
    echo "  -q                  - Suppress notification messages"
    exit 1
}

WHOAMI="$(whoami)"
if [ "${SUDO_USER}" != "" ]
then
    WHOAMI="${SUDO_USER}(as $(whoami))"
fi

NAME="snap-$(date +%Y%m%d%H%M%S)"
DESC="snapshot taken by ${WHOAMI} on $(date)"

# Parse the command-line options
while getopts "d:Dhn:q" OPTION
do
    case $OPTION in
        d)
            DESC=$(printf "%s\n\n%s" "${OPTARG}" "${DESC}")
            ;;
        D)
            DEBUG=1
            ;;
        h)  
            usage
            exit 1;     # should never get here
            ;;
        n)
            NAME="${OPTARG}"
            ;;
        q)  
            QUIET=1
            ;;
        ?)  
            echo "Unknown argument, exiting"
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

# we must have been given a guest name
GUEST=$1
if [ "${GUEST}" == "" ]
then
    usage
    exit 1
fi

# Find the server the guest is on
SERVER=$(get_server "${GUEST}")
if [ "${SERVER}" == "" ]
then
    fatal "Unable to snap '${GUEST}', guest not found"
    exit 1; # should never get here
fi

# Create the snapshot
notice "Creating snapshot of '${GUEST}' on '${SERVER}'"
"${VIRSH}" $(get_connect_method "${SERVER}") snapshot-create-as \
    --domain "${GUEST}"                                         \
    --name "${NAME}"                                            \
    --description "${DESC}"                                     \
    --atomic

